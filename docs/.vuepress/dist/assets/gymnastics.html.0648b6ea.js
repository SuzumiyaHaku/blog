import{_ as e,r as n,o,c,a as s,w as l,b as a,d as r,e as i}from"./app.acb70b14.js";const k={},u=a("h1",{id:"ts\u7C7B\u578B\u4F53\u64CD\u8BAD\u7EC3",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ts\u7C7B\u578B\u4F53\u64CD\u8BAD\u7EC3","aria-hidden":"true"},"#"),r(" ts\u7C7B\u578B\u4F53\u64CD\u8BAD\u7EC3")],-1),d=i(`<h2 id="\u5207\u5272\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5207\u5272\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5207\u5272\u5B57\u7B26\u4E32</h2><h3 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u5B9E\u73B0\u7C7B\u4F3C &quot;ABC&quot;.split(&quot;&quot;)\u7684\u529F\u80FD</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MySplit<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token constant">R</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token string">&quot;&quot;</span>
  <span class="token operator">?</span> <span class="token constant">R</span>
  <span class="token operator">:</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">B</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">?</span> MySplit<span class="token operator">&lt;</span><span class="token constant">B</span><span class="token punctuation">,</span> <span class="token constant">A</span> <span class="token operator">|</span> <span class="token constant">R</span><span class="token operator">&gt;</span>
    <span class="token operator">:</span> <span class="token constant">R</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">R</span></span> <span class="token operator">=</span> MySplit<span class="token operator">&lt;</span><span class="token string">&quot;\u7269\u8BED\u7CFB\u5217&quot;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u52A0\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u52A0\u6CD5" aria-hidden="true">#</a> \u52A0\u6CD5</h2><h3 id="\u9898\u76EE-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-1" aria-hidden="true">#</a> \u9898\u76EE</h3><p>\u5B9E\u73B0\u4E00\u4E2An + m\uFF0Cm\uFF0Cn\u90FD\u662F\u6B63\u6574\u6570, \u4E14m\uFF0Cn\u5C0F\u4E8E1000\u3002</p><h3 id="\u63D0\u793A" tabindex="-1"><a class="header-anchor" href="#\u63D0\u793A" aria-hidden="true">#</a> \u63D0\u793A</h3><ol><li>\u5148\u5B9E\u73B0\u4E00\u4E2A\u6570\u5B57\u8F6C\u6570\u7EC4\uFF0C\u7136\u540E\u62FC\u63A5\u4E24\u4E2A\u6570\u7EC4\uFF0C\u8FD4\u56DE\u6570\u7EC4\u7684length\u5C5E\u6027</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ToTuple<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">U</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> ToTuple<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>

<span class="token keyword">type</span> <span class="token class-name">Add<span class="token operator">&lt;</span><span class="token constant">M</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">N</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>ToTuple<span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">...</span>ToTuple<span class="token operator">&lt;</span><span class="token constant">N</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u51CF\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u51CF\u6CD5" aria-hidden="true">#</a> \u51CF\u6CD5</h2><h3 id="\u9898\u76EE-2" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE-2" aria-hidden="true">#</a> \u9898\u76EE</h3><p>\u5B9E\u73B0\u4E00\u4E2An - m\uFF0Cn\u548Cm\u90FD\u662F\u6574\u6570\uFF0C\u4E14n &gt; m</p><h3 id="\u63D0\u793A-1" tabindex="-1"><a class="header-anchor" href="#\u63D0\u793A-1" aria-hidden="true">#</a> \u63D0\u793A</h3><ol><li>\u5148\u5B9E\u73B0\u4E00\u4E2A\u6570\u5B57\u8F6C\u6570\u7EC4\uFF0C\u7136\u540E\u6709\u5982\u4E0B\u529E\u6CD5\uFF0C\u53EF\u5F97\u51FA\u6570\u7EC4\u7684\u76F8\u5DEE\u90E8\u5206\u7684\u96C6\u5408\u3002</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">S</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token comment">// [0, 0]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ToTuple<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">U</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> ToTuple<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>

<span class="token keyword">type</span> <span class="token class-name">Sub<span class="token operator">&lt;</span><span class="token constant">M</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">N</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> ToTuple<span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token operator">...</span>ToTuple<span class="token operator">&lt;</span><span class="token constant">N</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">A</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E24\u6570\u548C" tabindex="-1"><a class="header-anchor" href="#\u4E24\u6570\u548C" aria-hidden="true">#</a> \u4E24\u6570\u548C</h2><h3 id="\u9898\u76EE\u63CF\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u7ED9\u5B9A\u4E00\u4E2A\u6570\u5B57n\uFF0C\u548C\u4E00\u4E2A\u6570\u5B57\u7684\u96C6\u5408\uFF0C\u5224\u65AD\u96C6\u5408\u5185\u662F\u5426\u6709\u4E24\u4E2A\u6570\u76F8\u52A0\u7B49\u4E8En</p><h3 id="\u63D0\u793A-2" tabindex="-1"><a class="header-anchor" href="#\u63D0\u793A-2" aria-hidden="true">#</a> \u63D0\u793A</h3><p>\u5148\u7528js\u5B9E\u73B0\u4E00\u4E2A\u53EF\u4EE5\u7ED9TS\u7FFB\u8BD1\u7684\u5199\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">twoSum2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">a</span><span class="token operator">:</span> number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">t</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">set</span><span class="token operator">:</span> Set<span class="token operator">&lt;</span>number<span class="token operator">&gt;</span></span><span class="token punctuation">)</span><span class="token operator">:</span> boolean <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> delta <span class="token operator">=</span> t <span class="token operator">-</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">return</span> set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>delta<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">twoSum2</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>set<span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ToTuple<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">U</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> ToTuple<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>

<span class="token comment">// \u52A0\u6CD5</span>
<span class="token keyword">type</span> <span class="token class-name">Add<span class="token operator">&lt;</span><span class="token constant">M</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">N</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>ToTuple<span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">...</span>ToTuple<span class="token operator">&lt;</span><span class="token constant">N</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span>
<span class="token comment">// \u51CF\u6CD5</span>
<span class="token keyword">type</span> <span class="token class-name">Sub<span class="token operator">&lt;</span><span class="token constant">M</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">N</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> ToTuple<span class="token operator">&lt;</span><span class="token constant">M</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token operator">...</span>ToTuple<span class="token operator">&lt;</span><span class="token constant">N</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">A</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>


<span class="token keyword">type</span> <span class="token class-name">Tail<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">[</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token operator">...</span><span class="token keyword">infer</span> <span class="token constant">R</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">R</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">type</span> <span class="token class-name">TwoSum<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">U</span> <span class="token keyword">extends</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token constant">R</span> <span class="token operator">=</span> <span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token number">0</span>
  <span class="token operator">?</span> <span class="token boolean">false</span>
  <span class="token operator">:</span> Sub<span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">R</span></span>
    <span class="token operator">?</span> <span class="token boolean">true</span>
    <span class="token operator">:</span> TwoSum<span class="token operator">&lt;</span>Tail<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">R</span> <span class="token operator">|</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>

  

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">R23</span></span> <span class="token operator">=</span> TwoSum<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u8F6C\u9A7C\u5CF0" tabindex="-1"><a class="header-anchor" href="#\u8F6C\u9A7C\u5CF0" aria-hidden="true">#</a> \u8F6C\u9A7C\u5CF0</h2><h3 id="\u9898\u76EE\u63CF\u8FF0-1" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE\u63CF\u8FF0-1" aria-hidden="true">#</a> \u9898\u76EE\u63CF\u8FF0</h3><p>\u628A AAA\u8F6C\u4E3ABBB\u7684\u9A7C\u5CF0</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">AAA</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  aa<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  Bb<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token string">&#39;aaa_bbb&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;ccc_ddd_eee&#39;</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  cc_Dd<span class="token operator">:</span> <span class="token punctuation">{</span>
    eee_fff_ggg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  ff_ii_jj<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">BBB</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  aa<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  bb<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token string">&quot;aaaBbb&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;cccDddEee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  ccDd<span class="token operator">:</span> <span class="token punctuation">{</span>
    eeeFffGgg<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  ffIiJj<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Case<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">any</span></span> <span class="token operator">?</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>key <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> Uncapitalize<span class="token operator">&lt;</span>CamelCase<span class="token operator">&lt;</span>key <span class="token operator">&amp;</span> <span class="token builtin">string</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span><span class="token operator">:</span> 
    <span class="token constant">T</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token keyword">infer</span> <span class="token constant">R</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span> <span class="token punctuation">(</span>CamelCase<span class="token operator">&lt;</span><span class="token constant">R</span><span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> 
      <span class="token constant">T</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span>
        Case<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">&gt;</span>
        <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span>
<span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token builtin">never</span>

<span class="token keyword">type</span> <span class="token class-name">CamelCase<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">infer</span> <span class="token constant">B</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">?</span> 
<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">A</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Capitalize<span class="token operator">&lt;</span>CamelCase<span class="token operator">&lt;</span><span class="token constant">B</span><span class="token operator">&gt;&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token operator">:</span> <span class="token constant">K</span>

<span class="token keyword">type</span> <span class="token class-name">res</span> <span class="token operator">=</span> Case<span class="token operator">&lt;</span><span class="token constant">AAA</span><span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28);function m(b,v){const t=n("MTA"),p=n("ClientOnly");return o(),c("div",null,[u,s(p,null,{default:l(()=>[s(t)]),_:1}),d])}const g=e(k,[["render",m],["__file","gymnastics.html.vue"]]);export{g as default};
