import{_ as r,r as o,o as k,c as d,a,w as e,b as n,d as s,e as c}from"./app.6b932823.js";const m={},v=n("h1",{id:"let\u548Cvar",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#let\u548Cvar","aria-hidden":"true"},"#"),s(" let\u548Cvar")],-1),b=c(`<h2 id="let\u548Cvar\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#let\u548Cvar\u7684\u533A\u522B" aria-hidden="true">#</a> let\u548Cvar\u7684\u533A\u522B</h2><p>let \u58F0\u660E\u7684\u8303\u56F4\u662F\u5757\u4F5C\u7528\u57DF\uFF0C\u800C var \u58F0\u660E\u7684\u8303\u56F4\u662F\u51FD\u6570\u4F5C\u7528\u57DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;QAQ&#39;</span><span class="token punctuation">;</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// QAQ</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// QAQ</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 26</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ReferenceError: age \u6CA1\u6709\u5B9A\u4E49</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u91CC\uFF0Cage \u53D8\u91CF\u4E4B\u6240\u4EE5\u4E0D\u80FD\u5728 if \u5757\u5916\u90E8\u88AB\u5F15\u7528\uFF0C\u662F\u56E0\u4E3A\u5B83\u7684\u4F5C\u7528\u57DF\u4EC5\u9650\u4E8E\u8BE5\u5757\u5185\u90E8\u3002\u5757\u4F5C\u7528\u57DF \u662F\u51FD\u6570\u4F5C\u7528\u57DF\u7684\u5B50\u96C6\uFF0C\u56E0\u6B64\u9002\u7528\u4E8E var \u7684\u4F5C\u7528\u57DF\u9650\u5236\u540C\u6837\u4E5F\u9002\u7528\u4E8E let\u3002</p><h3 id="\u6682\u65F6\u6027\u6B7B\u533A" tabindex="-1"><a class="header-anchor" href="#\u6682\u65F6\u6027\u6B7B\u533A" aria-hidden="true">#</a> \u6682\u65F6\u6027\u6B7B\u533A</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// name \u4F1A\u88AB\u63D0\u5347</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
<span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;QAQ&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ReferenceError\uFF1Aage \u6CA1\u6709\u5B9A\u4E49</span>
<span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u89E3\u6790\u4EE3\u7801\u65F6\uFF0CJavaScript \u5F15\u64CE\u4E5F\u4F1A\u6CE8\u610F\u51FA\u73B0\u5728\u5757\u540E\u9762\u7684 let \u58F0\u660E\uFF0C\u53EA\u4E0D\u8FC7\u5728\u6B64\u4E4B\u524D\u4E0D\u80FD\u4EE5\u4EFB\u4F55\u65B9 \u5F0F\u6765\u5F15\u7528\u672A\u58F0\u660E\u7684\u53D8\u91CF\u3002\u5728 let \u58F0\u660E\u4E4B\u524D\u7684\u6267\u884C\u77AC\u95F4\u88AB\u79F0\u4E3A\u201C\u6682\u65F6\u6027\u6B7B\u533A\u201D\uFF08temporal dead zone\uFF09\uFF0C\u5728\u6B64 \u9636\u6BB5\u5F15\u7528\u4EFB\u4F55\u540E\u9762\u624D\u58F0\u660E\u7684\u53D8\u91CF\u90FD\u4F1A\u629B\u51FA ReferenceError\u3002</p><h3 id="\u5168\u5C40\u7684\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C40\u7684\u58F0\u660E" aria-hidden="true">#</a> \u5168\u5C40\u7684\u58F0\u660E</h3><p>\u4E0E var \u5173\u952E\u5B57\u4E0D\u540C\uFF0C\u4F7F\u7528 let \u5728\u5168\u5C40\u4F5C\u7528\u57DF\u4E2D\u58F0\u660E\u7684\u53D8\u91CF\u4E0D\u4F1A\u6210\u4E3A window \u5BF9\u8C61\u7684\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;QAQ&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;QAQ&#39;</span>
<span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">26</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="let\u4E0D\u80FD\u5728\u540C\u4E00\u4E2A\u4F5C\u7528\u57DF\u5185\u58F0\u660E\u4E24\u6B21" tabindex="-1"><a class="header-anchor" href="#let\u4E0D\u80FD\u5728\u540C\u4E00\u4E2A\u4F5C\u7528\u57DF\u5185\u58F0\u660E\u4E24\u6B21" aria-hidden="true">#</a> let\u4E0D\u80FD\u5728\u540C\u4E00\u4E2A\u4F5C\u7528\u57DF\u5185\u58F0\u660E\u4E24\u6B21</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token number">2</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment">// 2</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token number">3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u4E0B\u4EE3\u7801\u4E00\u6267\u884C\u5C31\u4F1A\u76F4\u63A5\u62A5\u9519\uFF1AUncaught SyntaxError: Identifier &#39;s&#39; has already been declared</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token number">2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token number">3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment">//</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="for\u5FAA\u73AF\u4E2D\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#for\u5FAA\u73AF\u4E2D\u7684\u533A\u522B" aria-hidden="true">#</a> for\u5FAA\u73AF\u4E2D\u7684\u533A\u522B</h3><p>\u5728 let \u51FA\u73B0\u4E4B\u524D\uFF0Cfor \u5FAA\u73AF\u5B9A\u4E49\u7684\u8FED\u4EE3\u53D8\u91CF\u4F1A\u6E17\u900F\u5230\u5FAA\u73AF\u4F53\u5916\u90E8\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u5FAA\u73AF\u903B\u8F91</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6539\u6210\u4F7F\u7528 let \u4E4B\u540E\uFF0C\u8FD9\u4E2A\u95EE\u9898\u5C31\u6D88\u5931\u4E86\uFF0C\u56E0\u4E3A\u8FED\u4EE3\u53D8\u91CF\u7684\u4F5C\u7528\u57DF\u4EC5\u9650\u4E8E for \u5FAA\u73AF\u5757\u5185\u90E8\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// \u5FAA\u73AF\u903B\u8F91</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ReferenceError: i \u6CA1\u6709\u5B9A\u4E49</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u60F3for\u5FAA\u73AF\u6BCF\u9694\u4E00\u79D2\u6253\u53700,1,2,3,4,5\u8FD9\u6837, \u9700\u8981\u52A0\u4E0A\u4E00\u4E2A\u51FD\u6570\u4F5C\u7528\u57DF\u53BB\u8BB0\u4F4Fi\u5F53\u65F6\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">j</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> j <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u662Flet\u5C31\u4E0D\u9700\u8981</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> i <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="let\u5230\u5E95\u6709\u6CA1\u6709\u63D0\u5347" tabindex="-1"><a class="header-anchor" href="#let\u5230\u5E95\u6709\u6CA1\u6709\u63D0\u5347" aria-hidden="true">#</a> let\u5230\u5E95\u6709\u6CA1\u6709\u63D0\u5347</h2><p>\u56E0\u4E3A\u67E5\u4E86\u597D\u4E9B\u8D44\u6599\u3002\u53D1\u73B0\u6709\u4E9B\u8BF4\u7684\u63D0\u5347\u6709\u4E9B\u8BF4\u7684\u6CA1\u6709\u63D0\u5347\uFF0C\u793E\u533A\u8BA8\u8BBA\u5F88\u6FC0\u70C8\u3002\u90FD\u662F\u7AD9\u5728\u5404\u81EA\u6240\u5B9A\u4E49\u7684\u201C\u63D0\u5347\u201D\u7684\u6982\u5FF5\u4E0A\u8BB2\u7684\u3002 \u5BF9\u6B64\uFF0C\u6211\u628A\u5982\u4E0Bjs\u4EE3\u7801\u7F16\u8BD1\u6210\u4E86\u5B57\u8282\u7801\u3002\u6267\u884Cfoo\u7684\u539F\u56E0\u662F\uFF0Cv8\u5F15\u64CE\u4F1A\u4F18\u5316\u6CA1\u6709\u88AB\u6267\u884C\u7684\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> qaq <span class="token operator">=</span> <span class="token number">233</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>qaq<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6267\u884C</p><blockquote><p>node --print-bytecode xxx.js &gt; xxx.txt</p></blockquote>`,28),f=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token punctuation"},"["),s("generated bytecode "),n("span",{class:"token keyword"},"for"),s(" function"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"foo"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0x2fe502d77d11"),s(),n("span",{class:"token operator"},"<"),s("SharedFunctionInfo foo"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),s(`
Bytecode length`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"21"),s(`
Parameter count `),n("span",{class:"token number"},"1"),s(`
Register count `),n("span",{class:"token number"},"3"),s(`
Frame size `),n("span",{class:"token number"},"24"),s(`
OSR nesting level`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
Bytecode Age`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
   `),n("span",{class:"token number"},"29"),s(" S"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x2fe502d786be"),s(" @    "),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"00"),s(),n("span",{class:"token number"},"0"),s("d e9 "),n("span",{class:"token number"},"00"),s("       LdaSmi"),n("span",{class:"token punctuation"},"."),s("Wide "),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"233"),n("span",{class:"token punctuation"},"]"),s(`
         `),n("span",{class:"token number"},"0x2fe502d786c2"),s(" @    "),n("span",{class:"token number"},"4"),s(),n("span",{class:"token operator"},":"),s(` c3                Star0 
   `),n("span",{class:"token number"},"36"),s(" S"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x2fe502d786c3"),s(" @    "),n("span",{class:"token number"},"5"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"21"),s(),n("span",{class:"token number"},"00"),s(),n("span",{class:"token number"},"00"),s("          LdaGlobal "),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`
         `),n("span",{class:"token number"},"0x2fe502d786c6"),s(" @    "),n("span",{class:"token number"},"8"),s(),n("span",{class:"token operator"},":"),s(` c1                Star2 
   `),n("span",{class:"token number"},"44"),s(" E"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x2fe502d786c7"),s(" @    "),n("span",{class:"token number"},"9"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),s("d f8 "),n("span",{class:"token number"},"01"),s(),n("span",{class:"token number"},"02"),s("       LdaNamedProperty r2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),s(`
         `),n("span",{class:"token number"},"0x2fe502d786cb"),s(" @   "),n("span",{class:"token number"},"13"),s(),n("span",{class:"token operator"},":"),s(` c2                Star1 
   `),n("span",{class:"token number"},"44"),s(" E"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x2fe502d786cc"),s(" @   "),n("span",{class:"token number"},"14"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"5"),s("d f9 f8 fa "),n("span",{class:"token number"},"04"),s("    CallProperty1 r1"),n("span",{class:"token punctuation"},","),s(" r2"),n("span",{class:"token punctuation"},","),s(" r0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"]"),s(`
         `),n("span",{class:"token number"},"0x2fe502d786d1"),s(" @   "),n("span",{class:"token number"},"19"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`e                LdaUndefined 
   `),n("span",{class:"token number"},"54"),s(" S"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x2fe502d786d2"),s(" @   "),n("span",{class:"token number"},"20"),s(),n("span",{class:"token operator"},":"),s(` a8                Return 
Constant `),n("span",{class:"token function"},"pool"),s(),n("span",{class:"token punctuation"},"("),s("size "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token number"},"0x2fe502d78669"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s("FixedArray"),n("span",{class:"token punctuation"},"]"),s(` in OldSpace
 `),n("span",{class:"token operator"},"-"),s(" map"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0x309da7f812c1"),s(),n("span",{class:"token operator"},"<"),s("Map"),n("span",{class:"token operator"},">"),s(`
 `),n("span",{class:"token operator"},"-"),s(" length"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),s(`
           `),n("span",{class:"token number"},"0"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0x171c960b90b1"),s(),n("span",{class:"token operator"},"<"),s("String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},":"),s(" #console"),n("span",{class:"token operator"},">"),s(`
           `),n("span",{class:"token number"},"1"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0x171c9608c0b1"),s(),n("span",{class:"token operator"},"<"),s("String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},":"),s(" #log"),n("span",{class:"token operator"},">"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),g=n("div",{class:"language-c ext-c line-numbers-mode"},[n("pre",{class:"language-c"},[n("code",null,[n("span",{class:"token punctuation"},"["),s("generated bytecode "),n("span",{class:"token keyword"},"for"),s(" function"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token function"},"foo"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"0x1f2c1b037d11"),s(),n("span",{class:"token operator"},"<"),s("SharedFunctionInfo foo"),n("span",{class:"token operator"},">"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"]"),s(`
Bytecode length`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"21"),s(`
Parameter count `),n("span",{class:"token number"},"1"),s(`
Register count `),n("span",{class:"token number"},"3"),s(`
Frame size `),n("span",{class:"token number"},"24"),s(`
OSR nesting level`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
Bytecode Age`),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`
   `),n("span",{class:"token number"},"29"),s(" S"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x1f2c1b0386be"),s(" @    "),n("span",{class:"token number"},"0"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"00"),s(),n("span",{class:"token number"},"0"),s("d e9 "),n("span",{class:"token number"},"00"),s("       LdaSmi"),n("span",{class:"token punctuation"},"."),s("Wide "),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"233"),n("span",{class:"token punctuation"},"]"),s(`
         `),n("span",{class:"token number"},"0x1f2c1b0386c2"),s(" @    "),n("span",{class:"token number"},"4"),s(),n("span",{class:"token operator"},":"),s(` c3                Star0 
   `),n("span",{class:"token number"},"36"),s(" S"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x1f2c1b0386c3"),s(" @    "),n("span",{class:"token number"},"5"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"21"),s(),n("span",{class:"token number"},"00"),s(),n("span",{class:"token number"},"00"),s("          LdaGlobal "),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},"]"),s(`
         `),n("span",{class:"token number"},"0x1f2c1b0386c6"),s(" @    "),n("span",{class:"token number"},"8"),s(),n("span",{class:"token operator"},":"),s(` c1                Star2 
   `),n("span",{class:"token number"},"44"),s(" E"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x1f2c1b0386c7"),s(" @    "),n("span",{class:"token number"},"9"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),s("d f8 "),n("span",{class:"token number"},"01"),s(),n("span",{class:"token number"},"02"),s("       LdaNamedProperty r2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},"]"),s(`
         `),n("span",{class:"token number"},"0x1f2c1b0386cb"),s(" @   "),n("span",{class:"token number"},"13"),s(),n("span",{class:"token operator"},":"),s(` c2                Star1 
   `),n("span",{class:"token number"},"44"),s(" E"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x1f2c1b0386cc"),s(" @   "),n("span",{class:"token number"},"14"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"5"),s("d f9 f8 fa "),n("span",{class:"token number"},"04"),s("    CallProperty1 r1"),n("span",{class:"token punctuation"},","),s(" r2"),n("span",{class:"token punctuation"},","),s(" r0"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},"]"),s(`
         `),n("span",{class:"token number"},"0x1f2c1b0386d1"),s(" @   "),n("span",{class:"token number"},"19"),s(),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0"),s(`e                LdaUndefined 
   `),n("span",{class:"token number"},"54"),s(" S"),n("span",{class:"token operator"},">"),s(),n("span",{class:"token number"},"0x1f2c1b0386d2"),s(" @   "),n("span",{class:"token number"},"20"),s(),n("span",{class:"token operator"},":"),s(` a8                Return 
Constant `),n("span",{class:"token function"},"pool"),s(),n("span",{class:"token punctuation"},"("),s("size "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token number"},"0x1f2c1b038669"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"["),s("FixedArray"),n("span",{class:"token punctuation"},"]"),s(` in OldSpace
 `),n("span",{class:"token operator"},"-"),s(" map"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0x1e0d682412c1"),s(),n("span",{class:"token operator"},"<"),s("Map"),n("span",{class:"token operator"},">"),s(`
 `),n("span",{class:"token operator"},"-"),s(" length"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"2"),s(`
           `),n("span",{class:"token number"},"0"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0x3171e69390b1"),s(),n("span",{class:"token operator"},"<"),s("String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},":"),s(" #console"),n("span",{class:"token operator"},">"),s(`
           `),n("span",{class:"token number"},"1"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token number"},"0x3171e690c0b1"),s(),n("span",{class:"token operator"},"<"),s("String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token operator"},":"),s(" #log"),n("span",{class:"token operator"},">"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),h=c(`<p>\u5F97\u5230\u7684\u7ED3\u679C\u662F\u4E24\u8005\u9664\u4E86\u5185\u5B58\u5730\u5740\u5916\uFF0C\u5176\u4ED6\u5730\u65B9\u5E76\u6CA1\u6709\u5565\u533A\u522B</p><h2 id="\u58F0\u660E\u63D0\u5347" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E\u63D0\u5347" aria-hidden="true">#</a> \u58F0\u660E\u63D0\u5347</h2><h3 id="_1-\u51FD\u6570\u4F18\u5148" tabindex="-1"><a class="header-anchor" href="#_1-\u51FD\u6570\u4F18\u5148" aria-hidden="true">#</a> 1. \u51FD\u6570\u4F18\u5148</h3><p>\u51FD\u6570\u58F0\u660E\u548C\u53D8\u91CF\u58F0\u660E\u90FD\u4F1A\u88AB\u63D0\u5347\u3002\u4F46\u662F\u4E00\u4E2A\u503C\u5F97\u6CE8\u610F\u7684\u7EC6\u8282\uFF0C\u662F\u51FD\u6570\u4F1A\u9996\u5148\u88AB\u63D0\u5347\uFF0C\u7136\u540E\u624D\u662F\u53D8\u91CF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token keyword">var</span> foo<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F1A\u8F93\u51FA 1 \u800C\u4E0D\u662F 2 \uFF01\u8FD9\u4E2A\u4EE3\u7801\u7247\u6BB5\u4F1A\u88AB\u5F15\u64CE\u7406\u89E3\u4E3A\u5982\u4E0B\u5F62\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
<span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0Cvar foo \u5C3D\u7BA1\u51FA\u73B0\u5728 function foo()... \u7684\u58F0\u660E\u4E4B\u524D\uFF0C\u4F46\u5B83\u662F\u91CD\u590D\u7684\u58F0\u660E\uFF08\u56E0\u6B64\u88AB\u5FFD \u7565\u4E86\uFF09\uFF0C\u56E0\u4E3A\u51FD\u6570\u58F0\u660E\u4F1A\u88AB\u63D0\u5347\u5230\u666E\u901A\u53D8\u91CF\u4E4B\u524D\u3002 \u5C3D\u7BA1\u91CD\u590D\u7684 var \u58F0\u660E\u4F1A\u88AB\u5FFD\u7565\u6389\uFF0C\u4F46\u51FA\u73B0\u5728\u540E\u9762\u7684\u51FD\u6570\u58F0\u660E\u8FD8\u662F\u53EF\u4EE5\u8986\u76D6\u524D\u9762\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u8003\u8651\u5982\u4E0B\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_2-\u8003\u8651\u5982\u4E0B\u4EE3\u7801" aria-hidden="true">#</a> 2. \u8003\u8651\u5982\u4E0B\u4EE3\u7801</h3>`,10),x=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"var"),s(" a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"var"),s(" a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),_=n("div",{class:"language-javascript ext-js line-numbers-mode"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"var"),s(" a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(`
`),n("span",{class:"token keyword"},"function"),s(),n("span",{class:"token function"},"f"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
  console`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// undefined"),s(`
  `),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token boolean"},"false"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token keyword"},"var"),s(" a "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// \u8FD9\u91CC\u7684var a\u4F1A\u5B58\u5728\u53D8\u91CF\u63D0\u5347"),s(`
  `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),y=c(`<p>\u5982\u4F55\u8BA9\u5B83\u6253\u53701\u5462\uFF1F\u6539\u4E3Alet\u89E3\u51B3\u95EE\u9898\uFF0C\u4F46\u662F\u4E0D\u80FD\u5220\u6389if()\uFF0C\u56E0\u4E3A\u63D0\u524D\u4F7F\u7528let\u58F0\u660E\u7684\u53D8\u91CF\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// var a = 2;</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-\u5947\u602A\u7684\u9898" tabindex="-1"><a class="header-anchor" href="#_3-\u5947\u602A\u7684\u9898" aria-hidden="true">#</a> 3. \u5947\u602A\u7684\u9898</h3><p>\u5373\u4F7F\u4F60\u5BF9\u4E0A\u9762\u7684\u89C4\u5F8B\u5F88\u719F\u6089\u4E86\u3002\u4F46\u662F\u78B0\u5230\u8FD9\u9898\u8FD8\u662F\u5F88\u5927\u6982\u7387\u4F1A\u5F04\u9519\uFF01</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span>
	<span class="token punctuation">{</span> 
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;a0&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
		a <span class="token operator">=</span> <span class="token number">99</span><span class="token punctuation">;</span>
		<span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token punctuation">}</span>
		a <span class="token operator">=</span> <span class="token number">30</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;a1&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;a2&#39;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>IE\u3001edge</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// a0 function a() {}</span>

<span class="token comment">// a1 30</span>

<span class="token comment">// a2 function a() {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Google\u3001Firefox</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// a0 \u0192 function a() {}</span>

<span class="token comment">// a1 30</span>

<span class="token comment">// a2 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003" aria-hidden="true">#</a> \u53C2\u8003</h2>`,10),j={href:"https://dmitripavlutin.com/variables-lifecycle-and-why-let-is-not-hoisted/#comments",target:"_blank",rel:"noopener noreferrer"},w={href:"https://stackoverflow.com/questions/31219420/are-variables-declared-with-let-or-const-hoisted/31222689#31222689",target:"_blank",rel:"noopener noreferrer"},S={href:"https://zhuanlan.zhihu.com/p/28140450",target:"_blank",rel:"noopener noreferrer"},A={href:"https://zhuanlan.zhihu.com/p/28590489",target:"_blank",rel:"noopener noreferrer"},C={href:"https://mp.weixin.qq.com/s/t__Jqzg1rbTlsCHXKMwh6A",target:"_blank",rel:"noopener noreferrer"},E=n("li",null,"\u300A\u4F60\u4E0D\u77E5\u9053\u7684JavaScript\u4E0A\u5377\u300B",-1),Q=n("li",null,"\u300Ajavascript\u9AD8\u7EA7\u7F16\u7A0B\u7B2C4\u7248\u300B",-1);function L(q,z){const i=o("MTA"),u=o("ClientOnly"),p=o("CodeGroupItem"),l=o("CodeGroup"),t=o("ExternalLinkIcon");return k(),d("div",null,[v,a(u,null,{default:e(()=>[a(i)]),_:1}),b,a(l,null,{default:e(()=>[a(p,{title:"var\u7684"},{default:e(()=>[f]),_:1}),a(p,{title:"let\u7684\u5B57\u8282\u7801"},{default:e(()=>[g]),_:1})]),_:1}),h,a(l,null,{default:e(()=>[a(p,{title:"\u4EE3\u7801"},{default:e(()=>[x]),_:1}),a(p,{title:"\u7ED3\u679C"},{default:e(()=>[_]),_:1})]),_:1}),y,n("ul",null,[n("li",null,[n("a",j,[s("JavaScript Variables Lifecycle: Why let Is Not Hoisted"),a(t)])]),n("li",null,[n("a",w,[s("Are variables declared with let or const hoisted?"),a(t)])]),n("li",null,[n("a",S,[s("let\u662F\u5426\u5B58\u5728\u63D0\u5347"),a(t)])]),n("li",null,[n("a",A,[s("\u7406\u89E3 V8 \u7684\u5B57\u8282\u7801\u300C\u8BD1\u300D"),a(t)])]),n("li",null,[n("a",C,[s("JavaScript \u5F15\u64CE V8 \u6267\u884C\u6D41\u7A0B\u6982\u8FF0"),a(t)])]),E,Q])])}const I=r(m,[["render",L],["__file","let,var.html.vue"]]);export{I as default};
