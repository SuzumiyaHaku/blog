import{_ as o,r as n,o as e,c,d as s,w as u,a,b as l,e as i}from"./app.b48b29fc.js";const k={},r=a("h1",{id:"object-assign\u548C-\u5C55\u5F00\u8FD0\u7B97\u7B26-\u6269\u5C55\u8FD0\u7B97\u7B26-\u7684\u533A\u522B-\u5DF2\u53D1\u5E16",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#object-assign\u548C-\u5C55\u5F00\u8FD0\u7B97\u7B26-\u6269\u5C55\u8FD0\u7B97\u7B26-\u7684\u533A\u522B-\u5DF2\u53D1\u5E16","aria-hidden":"true"},"#"),l(" Object.assign\u548C...\uFF08\u5C55\u5F00\u8FD0\u7B97\u7B26/\u6269\u5C55\u8FD0\u7B97\u7B26\uFF09\u7684\u533A\u522B [\u5DF2\u53D1\u5E16]")],-1),d=i(`<h2 id="_1\u3001\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u57FA\u7840" aria-hidden="true">#</a> 1\u3001\u57FA\u7840</h2><p>&quot;...&quot;\u53EB\u5C55\u5F00\u8FD0\u7B97\u7B26\uFF08\u6269\u5C55\u8FD0\u7B97\u7B26\uFF09\u7684\u65F6\u5019\uFF0C\u5927\u90E8\u5206\u60C5\u51B5\u4E0B\uFF1A 1\u3001{...obj} \u540C Object.assign({}, obj)<br> 2\u3001{...obj, a: 1} \u540C Object.assign(obj, { a: 1}); \u57FA\u672C\u4F7F\u7528\u5F62\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token string">&#39;c&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj<span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">233</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// { a: 233, b: &#39;b&#39;, c: &#39;c&#39; }</span>
<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">]</span> <span class="token comment">// [1,2,3,4,5,6]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>[...arr, a: 1]\u7684\u6027\u80FD\u6BD4[a: 1, ...arr]\u7684\u9AD8\u3001\u7528\u5728\u5BF9\u8C61\u4E0A\u7684\u65F6\u5019\u4E5F\u662F\u653E\u5728\u524D\u9762\u6BD4\u653E\u5728\u540E\u9762\u6027\u80FD\u9AD8\u3002\u653E\u5728\u540E\u9762\u7684\u65F6\u5019\uFF0C\u8FD8\u51FA\u73B0\u6D4B\u8BD5\u6267\u884C\u65F6\u95F4\u4E0D\u7A33\u5B9A\u7684\u60C5\u51B5\u3002</p><h2 id="_2\u3001\u6027\u80FD\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u6027\u80FD\u6D4B\u8BD5" aria-hidden="true">#</a> 2\u3001\u6027\u80FD\u6D4B\u8BD5\uFF1A</h2><h4 id="_1\u3001\u5BF9\u8C61\u5408\u5E76\u6D4B\u8BD5" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u5BF9\u8C61\u5408\u5E76\u6D4B\u8BD5" aria-hidden="true">#</a> 1\u3001\u5BF9\u8C61\u5408\u5E76\u6D4B\u8BD5</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">foo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;Object.assign\u5BF9\u8C61\u5408\u5E76\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token string">&#39;key&#39;</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token operator">:</span> i <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;Object.assign\u5BF9\u8C61\u5408\u5E76\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">foo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C55\u5F00\u8FD0\u7B97\u7B26\u5BF9\u8C61\u5408\u5E76\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;key&#39;</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token operator">:</span> i <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C55\u5F00\u8FD0\u7B97\u7B26\u5BF9\u8C61\u5408\u5E76\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2\u3001\u6570\u7EC4\u5408\u5E76\u6D4B\u8BD5\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u6570\u7EC4\u5408\u5E76\u6D4B\u8BD5\u4EE3\u7801" aria-hidden="true">#</a> 2\u3001\u6570\u7EC4\u5408\u5E76\u6D4B\u8BD5\u4EE3\u7801\uFF1A</h4><p>\u591A\u6B21\u5FAA\u73AF\u5408\u5E76\u7684\u6D4B\u8BD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">foo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C55\u5F00\u8FD0\u7B97\u7B26\u6570\u7EC4\u5408\u5E76\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C55\u5F00\u8FD0\u7B97\u7B26\u6570\u7EC4\u5408\u5E76\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">foo4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F7F\u7528push\u65B9\u6CD5\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F7F\u7528push\u65B9\u6CD5\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">foo5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F7F\u7528concat\u65B9\u6CD5\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F7F\u7528concat\u65B9\u6CD5\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E24\u4E2A\u5927\u6570\u7EC4\u5408\u5E76</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token number">10000</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">foo6</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> testArr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> testArr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        testArr1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        testArr2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>count <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C55\u5F00\u8FD0\u7B97\u7B26\u6570\u7EC4\u5408\u5E76\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>testArr1<span class="token punctuation">,</span> <span class="token operator">...</span>testArr2<span class="token punctuation">]</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C55\u5F00\u8FD0\u7B97\u7B26\u6570\u7EC4\u5408\u5E76\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">foo7</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> testArr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> testArr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        testArr1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        testArr2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>count <span class="token operator">*</span> <span class="token number">100</span> <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F7F\u7528concat\u65B9\u6CD5\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      testArr2<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>testArr1<span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;\u4F7F\u7528concat\u65B9\u6CD5\u4F7F\u7528\u8017\u65F6&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u63D0\u793A\uFF1Achrome console.time\u6253\u5370\u7684\u65F6\u95F4\u6BD4Performance\u91CC\u7684\u66F4\u7CBE\u786E\u3001Firefox\u7684console.time\u6253\u5370\u6CA1\u6709\u6027\u80FD\u5206\u6790\u91CC\u7684\u7CBE\u786E\u3002firefox\u67E5\u770B\u66F4\u52A0\u7CBE\u786E\u7684\u65F6\u95F4 \u6253\u5F00F12\u5F00\u53D1web\u5F00\u53D1\u8005\u5DE5\u5177\u9762\u677F\u3001\u70B9\u51FB\u6027\u80FD\u8BB0\u5F55\u597D\u540E\uFF0C\u4ECE\u7011\u5E03\u56FE\u627E\u5230DOM\u4E8B\u4EF6\u3001\u70B9\u51FB\u5BF9\u5E94\u7684DOM\u4E8B\u4EF6\u9009\u9879\u5B57\u6837\uFF0C\u53F3\u8FB9\u5C31\u6709\u65F6\u95F4\u4E86 \u706B\u72D0\u622A\u56FE <img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1d9a886ec44441b69301e0763cb08126~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"> \u8C37\u6B4C\u6D4F\u89C8\u5668\u622A\u56FE</p></blockquote><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c6053ee1d3314c7e8628262567d8fd2e~tplv-k3u1fbpfcp-watermark.image?" alt="image.png"></p><h4 id="_3\u3001\u6D4B\u8BD5\u7ED3\u679C\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u6D4B\u8BD5\u7ED3\u679C\u5217\u8868" aria-hidden="true">#</a> 3\u3001\u6D4B\u8BD5\u7ED3\u679C\u5217\u8868\uFF1A</h4><table><thead><tr><th>\u6D4B\u8BD5\u6761\u4EF6</th><th>Chrome<code>\u7248\u672C94.0.4606.81</code></th><th>Firefox<code>\u7248\u672C93.0 (64 \u4F4D)</code></th></tr></thead><tbody><tr><td>Object.assign<code>\u5BF9\u8C61</code>\u5408\u5E76</td><td>14.07080078125 ms</td><td>12.11 ms</td></tr><tr><td>\u5C55\u5F00\u8FD0\u7B97\u7B26<code>\u5BF9\u8C61</code>\u5408\u5E76</td><td>18201.126953125 ms</td><td>7424.69 ms</td></tr><tr><td>\u5C55\u5F00\u8FD0\u7B97\u7B26<code>\u6570\u7EC4\u52A0\u5355\u4E2A</code></td><td>42.848876953125 ms</td><td>877.14 ms</td></tr><tr><td>push\u65B9\u6CD5<code>\u6570\u7EC4\u52A0\u5355\u4E2A</code></td><td>0.489013671875 ms</td><td>0.89 ms</td></tr><tr><td>concat\u65B9\u6CD5<code>\u6570\u7EC4\u52A0\u5355\u4E2A</code></td><td>0.6640625 ms</td><td>2.40 ms</td></tr><tr><td>\u5C55\u5F00\u8FD0\u7B97\u7B26<code>\u4E24\u4E2A\u5927\u6570\u7EC4\u5408\u5E76</code></td><td>38.1337890625 ms</td><td>43.64 ms</td></tr><tr><td>concat\u65B9\u6CD5<code>\u4E24\u4E2A\u5927\u6570\u7EC4\u5408\u5E76</code></td><td>4.3740234375 ms</td><td>31.28 ms</td></tr></tbody></table><h4 id="_4\u3001\u6027\u80FD\u6D4B\u8BD5\u7ED3\u8BBA" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u6027\u80FD\u6D4B\u8BD5\u7ED3\u8BBA" aria-hidden="true">#</a> 4\u3001\u6027\u80FD\u6D4B\u8BD5\u7ED3\u8BBA</h4><p>\u5728\u5FAA\u73AF\u6BD4\u8F83\u591A\u6216\u8005\u64CD\u4F5C\u7684\u6570\u7EC4\u957F\u5EA6\u6BD4\u8F83\u5927\u7684\u60C5\u51B5\u4E0B\uFF1A</p><ul><li>1\u3001Object.assign\u591A\u6570\u60C5\u51B5\u4E0B\u6027\u80FD\u6BD4\u5C55\u5F00\u8FD0\u7B97\u7B26(...)\u7684\u6027\u80FD\u9AD8</li><li>2\u3001\u6570\u7EC4\u81EA\u5E26\u7684\u65B9\u6CD5connat\u3001push\u6027\u80FD\u6BD4\u5C55\u5F00\u8FD0\u7B97\u7B26(...)\u7684\u6027\u80FD\u9AD8 \u90A3\u4E48\u95EE\u9898\u6765\u4E86\uFF0C\u662F\u4E0D\u662F\u6709\u4E0A\u9762\u7684\u7ED3\u679C\uFF0C\u6211\u4EEC\u5C31\u4E0D\u80FD\u4F7F\u7528...\u8FD0\u7B97\u7B26\u4E86\u5462\uFF1F\u6211\u89C9\u5F97\u4E0D\u4E00\u5B9A\uFF1A</li><li>\u7406\u75311\uFF1A\u4E00\u822C\u60C5\u51B5\u6211\u4EEC\u6CA1\u90A3\u4E48\u591A\u8D85\u7EA7\u5927\u7684\u5BF9\u8C61\uFF0C\u8D85\u7EA7\u5927\u7684\u6570\u7EC4\u8FD9\u6837\u7ED9\u4F60\u641E\u3002</li><li>\u7406\u75312\uFF1A...\u7684\u5199\u6CD5\u6BD4Object.assign\u66F4\u52A0\u4F18\u96C5;</li><li>\u7406\u75313\uFF1A\u6BD4\u5982\u6211\u4EEC\u60F3\u6570\u7EC4\u53BB\u91CD let arr = [1, 1, 2]; \u7528\u7684 [...new Set(arr)]\u5462;</li><li>\u7406\u75314\uFF1A\u8BF4\u4E0D\u5B9A\u540E\u9762\u6D4F\u89C8\u5668\u4F1A\u4F18\u5316\u8FD9\u4E2A\u73A9\u610F\u513F\u5462\uFF1F</li></ul><blockquote><p>\u5185\u5FC3\uFF1A\u7F16\u4E0D\u4E0B\u53BB\u4E86\u3002\u597D\u5427\uFF0C\u5077\u5077\u628A\u4E4B\u524D\u5199\u7684...\u6362\u4E86\u7B97\u4E86\u3002</p></blockquote><p>\u53EF\u80FD\u6709\u4EBA\u4F1A\u60F3\uFF0C\u4F7F\u7528babel\u8FD9\u4E9B\u6765\u8FDB\u884C\u7F16\u8BD1\uFF0C\u4E0B\u9762\u662Fes6\u8F6Ces5\u7684\u793A\u4F8B\uFF0C\u8FD9\u91CC\u53EA\u662F\u4E00\u90E8\u5206\uFF0C\u5404\u4E2A\u7248\u672C\u7684babel\u8F6C\u6362\u53EF\u80FD\u8FD8\u4E0D\u592A\u4E00\u6837\u3002\u4F46\u662F\u6709\u4E00\u70B9\u5C31\u662F\u589E\u52A0\u4E86\u4E00\u5927\u5806\u4EE3\u7801\u3002\u660E\u663E\u6CA1\u6709\u6211\u4EEC\u624B\u52A8\u4F18\u5316\u6765\u7684\u5B8C\u7F8E\u3002</p><p>\u5982\u4E0Bes6\u6E90\u4EE3\u7801\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">]</span>
<span class="token keyword">let</span> arr4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token operator">...</span>arr1<span class="token punctuation">]</span>
<span class="token keyword">let</span> arr5 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>

<span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>obj1<span class="token punctuation">,</span> 
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> obj3 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> 
  <span class="token operator">...</span>obj1 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528typescript\u7684tsc\u7F16\u8BD1\uFF08tsc\u7248\u672C\u662F4.6.4\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> __assign <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__assign<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    __assign <span class="token operator">=</span> Object<span class="token punctuation">.</span>assign <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> s<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s <span class="token operator">=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> p <span class="token keyword">in</span> s<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span>
                t<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> t<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">__assign</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> __spreadArray <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>__spreadArray<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> pack</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pack <span class="token operator">||</span> arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> from<span class="token punctuation">.</span>length<span class="token punctuation">,</span> ar<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ar <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>i <span class="token keyword">in</span> from<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>ar<span class="token punctuation">)</span> ar <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>from<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ar<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> from<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> to<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>ar <span class="token operator">||</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>from<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr3 <span class="token operator">=</span> <span class="token function">__spreadArray</span><span class="token punctuation">(</span><span class="token function">__spreadArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr1<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> arr2<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr4 <span class="token operator">=</span> <span class="token function">__spreadArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr1<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr5 <span class="token operator">=</span> <span class="token function">__spreadArray</span><span class="token punctuation">(</span><span class="token function">__spreadArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr1<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token function">__assign</span><span class="token punctuation">(</span><span class="token function">__assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj3 <span class="token operator">=</span> <span class="token function">__assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528@babel/preset-env\u7F16\u8BD1\uFF08\u7248\u672C\u662F7.17.10\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&quot;use strict&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> enumerableOnly</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">var</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span>getOwnPropertySymbols<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">var</span> symbols <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span> enumerableOnly <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>symbols <span class="token operator">=</span> symbols<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">sym</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> sym<span class="token punctuation">)</span><span class="token punctuation">.</span>enumerable<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> keys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> symbols<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">return</span> keys<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">_objectSpread</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">var</span> source <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">!=</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">?</span> arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">?</span> <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token function">Object</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">_defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> source<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">:</span> Object<span class="token punctuation">.</span>getOwnPropertyDescriptors <span class="token operator">?</span> Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token function">Object</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptor</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">return</span> target<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">_defineProperty</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span> Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> value<span class="token punctuation">,</span> <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token keyword">return</span> obj<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> arr5 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>arr1<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token function">_objectSpread</span><span class="token punctuation">(</span><span class="token function">_objectSpread</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> obj3 <span class="token operator">=</span> <span class="token function">_objectSpread</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">4</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3\u3001object-definedproperty\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#_3\u3001object-definedproperty\u5BF9\u6BD4" aria-hidden="true">#</a> 3\u3001Object.definedProperty\u5BF9\u6BD4</h2><h4 id="\u5C55\u5F00\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5C55\u5F00\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5C55\u5F00\u8FD0\u7B97\u7B26</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> internalValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
      Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getting key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>internalValue<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
          <span class="token keyword">return</span> internalValue<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token function">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">setting key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
          internalValue <span class="token operator">=</span> newValue
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> cc <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj<span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;555&#39;</span> <span class="token punctuation">}</span>
    cc<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">666</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A7\u5236\u53F0\u7ED3\u679C\uFF1A</p><blockquote><p>getting key &quot;a&quot;: 1 <code>\u53EA\u662F\u89E6\u53D1get 1\u6B21\uFF0C\u5E76\u4E14\u6253\u5370\u7684\u503C\u4E3A 1</code></p></blockquote><h4 id="object-assign" tabindex="-1"><a class="header-anchor" href="#object-assign" aria-hidden="true">#</a> Object.assign</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
     <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span>
   Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
     <span class="token keyword">let</span> internalValue <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
     Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token punctuation">{</span>
       <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getting key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>internalValue<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
         <span class="token keyword">return</span> internalValue<span class="token punctuation">;</span>
       <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token function">set</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">setting key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
         internalValue <span class="token operator">=</span> newValue
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
   <span class="token keyword">let</span> cc <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;555&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
   cc<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">666</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A7\u5236\u53F0\u7ED3\u679C\uFF1A</p><blockquote><p>setting key &quot;a&quot;: &quot;555&quot;<br> setting key &quot;a&quot;: 666 <code>\u89E6\u53D1\u4E86\u4E24\u6B21set</code></p></blockquote><h2 id="_4\u3001proxy\u7684\u7ED3\u679C\u548C\u4E0A\u9762\u7684definedproperty\u7ED3\u679C\u4E00\u6837" tabindex="-1"><a class="header-anchor" href="#_4\u3001proxy\u7684\u7ED3\u679C\u548C\u4E0A\u9762\u7684definedproperty\u7ED3\u679C\u4E00\u6837" aria-hidden="true">#</a> 4\u3001Proxy\u7684\u7ED3\u679C\u548C\u4E0A\u9762\u7684definedProperty\u7ED3\u679C\u4E00\u6837</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
     <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span>
   obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
       <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span> sKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getting key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span>sKey<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
         <span class="token keyword">return</span> o<span class="token punctuation">[</span>sKey<span class="token punctuation">]</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span> sKey<span class="token punctuation">,</span> vValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">setting key &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>vValue<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
         o<span class="token punctuation">[</span>sKey<span class="token punctuation">]</span> <span class="token operator">=</span> vValue<span class="token punctuation">;</span>
         <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span><span class="token punctuation">}</span>
   <span class="token punctuation">)</span>

   <span class="token keyword">let</span> cc <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj<span class="token punctuation">,</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&#39;555&#39;</span> <span class="token punctuation">}</span>
   <span class="token comment">// let cc = Object.assign(obj, { a: &#39;555&#39; })</span>
   cc<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">666</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5\u3001\u4E0D\u5B9A\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u4E0D\u5B9A\u53C2\u6570" aria-hidden="true">#</a> 5\u3001\u4E0D\u5B9A\u53C2\u6570\u201C<code>...</code>\u201D</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token comment">// \u4E0D\u5B9A\u53C2\u6570\u9650\u5236\uFF1A\u6BCF\u4E2A\u51FD\u6570\u6700\u591A\u53EA\u80FD\u7533\u660E\u4E00\u4E2A\u4E0D\u5B9A\u53C2\u6570\uFF0C\u800C\u4E14\u4E00\u5B9A\u8981\u653E\u5230\u53C2\u6570\u672B\u5C3E</span>
   <span class="token comment">// \u9519\u8BEF\uFF1Afunction foo(object, ...keys, last) { } // Uncaught SyntaxError: parameter after rest parameter</span>
   <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> <span class="token operator">...</span>keys</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> keys<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
   <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span>arr<span class="token punctuation">)</span> <span class="token comment">// {}, [1, 2, 3, 4]</span>
   <span class="token function">foo</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span> <span class="token comment">// 1, [2, 3, 4]</span>
   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
   <span class="token keyword">let</span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> <span class="token operator">...</span>o<span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span> 
   <span class="token comment">// a = 1</span>
   <span class="token comment">// o = { b: 2, c: 3 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>   <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
   <span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>o<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span>
   <span class="token comment">// a = 1</span>
   <span class="token comment">// o = [2, 3, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6\u3001\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u5C0F\u7ED3" aria-hidden="true">#</a> 6\u3001\u5C0F\u7ED3</h2><p>\u5728Chrome<code>\u7248\u672C94.0.4606.81</code> \u3001 Firefox<code>\u7248\u672C93.0 (64 \u4F4D)</code>\u7684\u6D4F\u89C8\u5668\u4E0B</p><ul><li>\u5BF9\u8C61\u5408\u5E76\uFF0C\u6570\u7EC4\u5408\u5E76\uFF0CObject.assign\u3001connat\u7684\u6027\u80FD\u4F1A\u6BD4\u5C55\u5F00\u8FD0\u7B97\u7B26\u201C...\u201D\u7684\u6027\u80FD\u9AD8</li><li>Object.assign\u4F1A\u89E6\u53D1Proxy/Object.definedProperty\u7684set\u65B9\u6CD5\uFF0C\u5C55\u5F00\u8FD0\u7B97\u7B26\u201C...\u201D\u4E0D\u4F1A\u89E6\u53D1</li><li>\u5B83\u4E24\u90FD\u662F\u6D45\u62F7\u8D1D</li><li>\u5408\u5E76\u5BF9\u8C61\u3001\u6570\u7EC4\u7684\u65F6\u5019\uFF0C\u5C55\u5F00\u8FD0\u7B97\u7B26\u653E\u5728\u524D\u9762\u7684\u6027\u80FD\u6BD4\u653E\u5728\u540E\u9762\u7684\u6027\u80FD\u9AD8</li><li>\u4E0D\u5B9A\u53C2\u6570\u7684\u65F6\u5019\uFF0C\u6709\u81EA\u5DF1\u7684\u4F7F\u7528\u65B9\u5F0F</li></ul>`,45);function v(b,m){const p=n("MTA"),t=n("ClientOnly");return e(),c("div",null,[r,s(t,null,{default:u(()=>[s(p)]),_:1}),d])}const f=o(k,[["render",v],["__file","assign.html.vue"]]);export{f as default};
