import{_ as p,r as o,o as c,c as l,a as n,b as s,d as t,e}from"./app.16b9b345.js";const i={},u=e(`<h1 id="instanceof-\u5DF2\u53D1\u5E16" tabindex="-1"><a class="header-anchor" href="#instanceof-\u5DF2\u53D1\u5E16" aria-hidden="true">#</a> instanceof [\u5DF2\u53D1\u5E16]</h1><h2 id="_1\u3001instanceof\u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u6765\u786E\u5B9A\u4E00\u4E2A\u5BF9\u8C61\u5B9E\u4F8B\u7684\u539F\u578B\u94FE\u4E0A\u662F\u5426\u6709\u539F\u578Bxx\u3002" tabindex="-1"><a class="header-anchor" href="#_1\u3001instanceof\u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u6765\u786E\u5B9A\u4E00\u4E2A\u5BF9\u8C61\u5B9E\u4F8B\u7684\u539F\u578B\u94FE\u4E0A\u662F\u5426\u6709\u539F\u578Bxx\u3002" aria-hidden="true">#</a> 1\u3001<code>instanceof</code>\u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u6765\u786E\u5B9A\u4E00\u4E2A\u5BF9\u8C61\u5B9E\u4F8B\u7684\u539F\u578B\u94FE\u4E0A\u662F\u5426\u6709\u539F\u578BXX\u3002</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;string&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;object&quot;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;object&quot;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Array <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Object <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

Object <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
Array <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

Function <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Object <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Object <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Function <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
String <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Array <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number <span class="token keyword">instanceof</span> <span class="token class-name">Function</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token string">&quot;&quot;</span> <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token number">1</span> <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token boolean">false</span> <span class="token keyword">instanceof</span> <span class="token class-name">Boolean</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9519\u8BEF\u4F7F\u7528\u7684\u62A5\u9519 \u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array <span class="token keyword">instanceof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught TypeError: Right-hand side of &#39;instanceof&#39; is not callable</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">;</span>
<span class="token comment">// VM91:1 Uncaught SyntaxError: Unexpected token &#39;instanceof&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001instanceof-\u7684\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#_2\u3001instanceof-\u7684\u539F\u7406" aria-hidden="true">#</a> 2\u3001<code>instanceof</code> \u7684\u539F\u7406</h2><h4 id="proto-\u548Cprototype\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#proto-\u548Cprototype\u7684\u533A\u522B" aria-hidden="true">#</a> <strong><code>__proto__</code>\u548C<code>prototype</code>\u7684\u533A\u522B:</strong></h4><p>prototype \u53EA\u5728 Function \u4E2D\u6709\uFF08\u662F\u51FD\u6570\u5BF9\u8C61\u7684\u5C5E\u6027\uFF09\uFF0C\u800C __proto__ \u5219\u5728Function\u548CObject\u4E2D\u90FD\u6709\u3002</p><hr><p>__proto__ is the actual object that is used in the lookup chain to resolve methods, etc. prototype is the &gt; object that is used to build __proto__ when you create an object with new:<br><strong>\u5927\u81F4\u610F\u601D\u662F\uFF1A __proto__ \u662F\u771F\u6B63\u7528\u6765\u67E5\u627E\u539F\u578B\u94FE\u53BB\u83B7\u53D6\u65B9\u6CD5\u7684\u5BF9\u8C61\u3002prototype\u662F\u5728\u7528new\u521B\u5EFA\u5BF9\u8C61\u65F6\u7528\u6765\u6784\u5EFA __proto__ \u7684\u5BF9\u8C61</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> <span class="token class-name">Foo</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
<span class="token punctuation">(</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span> <span class="token punctuation">)</span><span class="token punctuation">.</span>prototype <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,13),r={href:"https://stackoverflow.com/questions/9959727/proto-vs-prototype-in-javascript",target:"_blank",rel:"noopener noreferrer"},k=e(`<hr><p><strong>\u7406\u89E3\u539F\u578B</strong></p><ul><li><p>\u65E0\u8BBA\u4F55\u65F6\uFF0C\u53EA\u8981\u521B\u5EFA\u4E00\u4E2A\u51FD\u6570\uFF0C\u5C31\u4F1A\u6309\u7167\u7279\u5B9A\u7684\u89C4\u5219\u4E3A\u8FD9\u4E2A\u51FD\u6570\u521B\u5EFA\u4E00\u4E2A <code>prototype</code> \u5C5E\u6027\uFF08\u6307\u5411\u539F\u578B\u5BF9\u8C61\uFF09\u3002\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u6240\u6709\u539F\u578B\u5BF9\u8C61\u81EA\u52A8\u83B7\u5F97\u4E00\u4E2A\u540D\u4E3A constructor \u7684\u5C5E\u6027\uFF0C\u6307\u56DE\u4E0E\u4E4B\u5173\u8054\u7684\u6784\u9020\u51FD\u6570\u3002\u5BF9\u524D\u9762\u7684\u4F8B\u5B50\u800C\u8A00\uFF0CPerson.prototype.constructor \u6307\u5411 Person\u3002\u7136\u540E\uFF0C\u56E0\u6784\u9020\u51FD\u6570\u800C\u5F02\uFF0C\u53EF\u80FD\u4F1A\u7ED9\u539F\u578B\u5BF9\u8C61\u6DFB\u52A0\u5176\u4ED6\u5C5E\u6027\u548C\u65B9\u6CD5\u3002</p></li><li><p>\u5728\u81EA\u5B9A\u4E49\u6784\u9020\u51FD\u6570\u65F6\uFF0C\u539F\u578B\u5BF9\u8C61\u9ED8\u8BA4\u53EA\u4F1A\u83B7\u5F97 constructor \u5C5E\u6027\uFF0C\u5176\u4ED6\u7684\u6240\u6709\u65B9\u6CD5\u90FD\u7EE7\u627F\u81EA Object\u3002\u6BCF\u6B21\u8C03\u7528\u6784\u9020\u51FD\u6570\u521B\u5EFA\u4E00\u4E2A\u65B0\u5B9E\u4F8B\uFF0C\u8FD9\u4E2A\u5B9E\u4F8B\u7684\u5185\u90E8[[Prototype]]\u6307\u9488\u5C31\u4F1A\u88AB\u8D4B\u503C\u4E3A\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u5BF9\u8C61\u3002\u811A\u672C\u4E2D\u6CA1\u6709\u8BBF\u95EE\u8FD9\u4E2A[[Prototype]]\u7279\u6027\u7684\u6807\u51C6\u65B9\u5F0F\uFF0C \u4F46 Firefox\u3001Safari\u548C Chrome \u4F1A\u5728\u6BCF\u4E2A\u5BF9\u8C61\u4E0A\u66B4\u9732__proto__\u5C5E\u6027\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u5C5E\u6027\u53EF\u4EE5\u8BBF\u95EE\u5BF9\u8C61\u7684\u539F\u578B\u3002\u5728\u5176\u4ED6\u5B9E\u73B0\u4E2D\uFF0C\u8FD9\u4E2A\u7279\u6027\u5B8C\u5168\u88AB\u9690\u85CF\u4E86\u3002\u5173\u952E\u5728\u4E8E\u7406\u89E3\u8FD9\u4E00\u70B9\uFF1A\u5B9E\u4F8B\u4E0E\u6784\u9020\u51FD\u6570\u539F\u578B\u4E4B\u95F4\u6709\u76F4\u63A5\u7684\u8054\u7CFB\uFF0C\u4F46\u5B9E\u4F8B\u4E0E\u6784\u9020\u51FD\u6570\u4E4B\u95F4\u6CA1\u6709\u3002</p></li></ul><blockquote><p>\u6458\u81EA\u4E8E\u300AJavaScript\u9AD8\u7EA7\u7A0B\u5E8F\u8BBE\u8BA1 \u7B2C\u56DB\u7248\u300B \u7B2C\u516B\u7AE0 8.2.4 \u539F\u578B\u6A21\u5F0F</p></blockquote><hr><p>\u4E5F\u5C31\u6709\u8FD9\u6837\u7684\u7ED3\u8BBA</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype <span class="token operator">===</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__proto__ <span class="token comment">// true</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype <span class="token operator">===</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">.</span>__proto__ <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6A21\u62DF\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u5B9E\u73B0" aria-hidden="true">#</a> \u6A21\u62DF\u5B9E\u73B0</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">instance_of</span><span class="token punctuation">(</span><span class="token parameter"><span class="token constant">L</span><span class="token punctuation">,</span> <span class="token constant">R</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//L \u8868\u793A\u5DE6\u8FB9\u7684object\uFF0CR \u8868\u793A\u53F3\u8FB9\u7684constructor</span>
 <span class="token keyword">const</span> <span class="token constant">R_P</span> <span class="token operator">=</span> <span class="token class-name">R</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
 <span class="token constant">L</span> <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span>
 <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">L</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> 
     <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> 
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">R_P</span> <span class="token operator">===</span> <span class="token constant">L</span><span class="token punctuation">)</span>
     <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> 
   <span class="token constant">L</span> <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span>__proto__<span class="token punctuation">;</span> 
 <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u4EE5\u53EF\u4EE5\u8FD9\u6837 \uFF08\u5E73\u5E38\u4E0D\u8981\u8FD9\u6837\u5E72\uFF01\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
arr<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">Number</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr <span class="token keyword">instanceof</span> <span class="token class-name">Number</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
arr<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u300A\u4F60\u4E0D\u77E5\u9053\u7684JavaScript\u4E0A\u5377\u300B\u6709\u8FD9\u4E48\u4E00\u6BB5</p><blockquote><p>.__proto__ \u770B\u8D77\u6765\u5F88\u50CF\u4E00\u4E2A\u5C5E\u6027\uFF0C\u4F46\u662F\u5B9E\u9645\u4E0A\u5B83\u66F4\u50CF\u4E00\u4E2A getter/setter\u3002 .__proto__ \u7684\u5B9E\u73B0\u5927\u81F4\u4E0A\u662F\u8FD9\u6837\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span> <span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token string">&quot;__proto__&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span> <span class="token keyword">this</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ES6 \u4E2D\u7684 setPrototypeOf(..)</span>
    Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span> <span class="token keyword">this</span><span class="token punctuation">,</span> o <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> o<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>\u65E5\u5E38\u5F00\u53D1\u4E2D\u8981\u6CE8\u610F__proto__\u8FD9\u4E2A\u975E\u6807\u51C6\u5C5E\u6027\uFF0C\u5C3D\u91CF\u4E0D\u8981\u53BB\u4F7F\u7528\u5B83\uFF0C\u4ECE\u4E0B\u9762\u7684\u4EE3\u7801\u53EF\u4EE5\u4E0D\u96BE\u53D1\u73B0\u4E0A\u9762\u7684instance_of\u7684\u6A21\u62DF\u5B9E\u73B0\uFF0C\u4E4B\u6240\u4EE5\u53EB\u6A21\u62DF\u7684\u539F\u56E0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> origin <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
origin<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
<span class="token comment">// obj.__proto__ = origin;</span>
Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> origin<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>__proto__<span class="token punctuation">)</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> origin<span class="token punctuation">)</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>__proto__ <span class="token operator">===</span> origin<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u4FEE\u6539\u539F\u578B\u5C3D\u91CF\u4F7F\u7528Object.setPrototypeOf()\u65B9\u6CD5\uFF0C\u4F46\u662FJavaScript\u9AD8\u7EA7\u7F16\u7A0B\u7B2C\u56DB\u7248\uFF0C\u7B2C\u516B\u7AE0\u4E2D\u6709\u8FD9\u4E48\u4E00\u6BB5\u8B66\u544A\u548C\u63CF\u8FF0\uFF1A</p><blockquote><p><code>\u8B66\u544A\uFF1AObject.setPrototypeOf()\u53EF\u80FD\u4F1A\u4E25\u91CD\u5F71\u54CD\u4EE3\u7801\u6027\u80FD\u3002Mozilla\u6587\u6863\u8BF4\u7684\u5F88\u6E05\u695A\uFF1A \u201C\u5728\u6240\u6709\u6D4F\u89C8\u5668\u548CJavaScript\u5F15\u64CE\u4E2D\uFF0C\u4FEE\u6539\u7EE7\u627F\u5173\u7CFB\u7684\u5F71\u54CD\u90FD\u662F\u5FAE\u5999\u4E14\u6DF1\u8FDC\u7684\u3002\u8FD9\u79CD\u5F71\u54CD\u5E76\u4E0D\u4EC5\u662F\u6267\u884C Object.setPrototypeOf()\u8BED\u53E5\u90A3\u4E48\u7B80\u5355\uFF0C\u800C\u662F\u4F1A\u6D89\u53CA\u6240\u6709\u8BBF\u95EE\u4E86\u90A3\u4E9B\u4FEE\u6539\u8FC7[[Prototype]]\u7684\u5BF9\u8C61\u7684\u4EE3\u7801\u3002\u201D</code><br> \u4E3A\u4E86\u907F\u514D\u4F7F\u7528Object.setPrototypeOf()\u53EF\u80FD\u9020\u6210\u7684\u6027\u80FD\u4E0B\u964D\uFF0C\u53EF\u4EE5\u901A\u8FC7Object.create()\u6765\u521B\u5EFA\u4E00\u4E2A\u65B0\u5BF9\u8C61\uFF0C\u540C\u65F6\u4E3A\u5176\u6307\u5B9A\u539F\u578B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> biped <span class="token operator">=</span> <span class="token punctuation">{</span>
 <span class="token literal-property property">numLegs</span><span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> person <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>biped<span class="token punctuation">)</span><span class="token punctuation">;</span>
person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Matt&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Matt</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>numLegs<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>person<span class="token punctuation">)</span> <span class="token operator">===</span> biped<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h4 id="es6\u4E2Dsymbol-hasinstance" tabindex="-1"><a class="header-anchor" href="#es6\u4E2Dsymbol-hasinstance" aria-hidden="true">#</a> ES6\u4E2DSymbol.hasInstance</h4>`,19),d=n("code",null,"Symbol.hasInstance",-1),m=n("code",null,"instanceof",-1),v=n("code",null,"foo instanceof Foo",-1),b=n("code",null,"Foo[Symbol.hasInstance](foo)",-1),f={href:"https://github.com/ruanyf/es6tutorial/search?utf8=%E2%9C%93&q=instanceof",target:"_blank",rel:"noopener noreferrer"},y=n("br",null,null,-1),_=n("code",null,"Symbol.hasInstance",-1),h=n("br",null,null,-1),g=n("code",null,"Symbol.hasInstance",-1),j=e(`<p>1\u3001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">myArr</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token parameter">instance</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">myArr</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2\u3001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyArr</span> <span class="token keyword">extends</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">get</span> <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>species<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Array<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MyArr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">MyArr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// false;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// true;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3\u3001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Function<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>Function<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Function<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Function<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>Array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Function<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>Number<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

Array<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Number<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3\u3001\u4E00\u4E9B\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u4E00\u4E9B\u7528\u6CD5" aria-hidden="true">#</a> 3\u3001\u4E00\u4E9B\u7528\u6CD5</h2><p>1\u3001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> 
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Foo<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">]</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">Foo</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="_2\u3001\u68C0\u6D4Bsymbol" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u68C0\u6D4Bsymbol" aria-hidden="true">#</a> 2\u3001\u68C0\u6D4BSymbol</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym <span class="token keyword">instanceof</span> <span class="token class-name">Symbol</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token keyword">var</span> symObj <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9700\u8981\u4F7F\u7528\u5C01\u88C5\u5BF9\u8C61\u5F62\u5F0F\u7684symObj\uFF0C\u800C\u4E0D\u662F\u539F\u751F\u5F62\u5F0F\u7684sym\u7684\u60C5\u51B5\u5F88\u5C11</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>symObj <span class="token keyword">instanceof</span> <span class="token class-name">Symbol</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>symObj<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> sym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>3\u3001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token keyword">instanceof</span> <span class="token class-name">TypeError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>error <span class="token keyword">instanceof</span> <span class="token class-name">ReferenceError</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>4\u3001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token constant">A</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token keyword">instanceof</span> <span class="token class-name">A</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span><span class="token constant">A</span><span class="token punctuation">,</span> Symbol<span class="token punctuation">.</span>hasInstance<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">value</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token keyword">instanceof</span> <span class="token class-name">A</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5\u3001\u5173\u4E8E\u662F\u5426\u662Fpromise" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u5173\u4E8E\u662F\u5426\u662Fpromise" aria-hidden="true">#</a> 5\u3001\u5173\u4E8E\u662F\u5426\u662F<code>Promise</code></h4><p>instanceof \u4E0D\u8DB3\u4EE5\u68C0\u67E5 Promise\uFF0CPromise \u503C\u53EF\u80FD\u662F\u4ECE\u5176\u4ED6\u6D4F\u89C8\u5668\u7A97\u53E3\u63A5\u6536\u5230\u7684\uFF0C\u7136\u800C\u63A5\u6536\u5230\u7684 Promise \u53EF\u80FD\u548C\u5F53\u524D\u7A97\u53E3\u7684\u6846\u67B6\u4E0D\u540C\uFF0C\u56E0\u6B64\u4E0D\u80FD\u8BC6\u522B Promise \u5B9E\u4F8B\u3002 \u5E93\u6216\u8005\u6846\u67B6\u53EF\u80FD\u4F1A\u5B9E\u73B0\u81EA\u5DF1\u7684 Promise \uFF0C\u4E0D\u662F\u4F7F\u7528 \u539F\u751F ES6 Promise \u5B9E\u73B0\uFF0C\u6240\u4EE5\u65E0\u6CD5\u68C0\u67E5\u3002\u4E0B\u9762\u7684\u4EE3\u7801\u770B\u8D77\u6765\u662F\u53EF\u884C\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
a <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,21),w=n("code",null,"is-promise",-1),O={href:"https://www.npmjs.com/package/is-promise",target:"_blank",rel:"noopener noreferrer"},S={href:"https://github.com/then/is-promise",target:"_blank",rel:"noopener noreferrer"},x=n("br",null,null,-1),P=e(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">isPromise</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>obj <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_4\u3001\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u5C0F\u7ED3" aria-hidden="true">#</a> 4\u3001\u5C0F\u7ED3</h2><ul><li>instanceof\u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u6765\u786E\u5B9A\u4E00\u4E2A\u5BF9\u8C61\u5B9E\u4F8B\u7684\u539F\u578B\u94FE\u4E0A\u662F\u5426\u6709\u539F\u578BXX</li><li>instanceof\u7684\u5B9E\u73B0\uFF0C\u662F\u901A\u8FC7\u5BF9\u8C61\u4E0A\u7684\u4E00\u5C42\u4E00\u5C42\u7684__proto__\u53BB\u67E5\u627E\u6700\u540E\u4E00\u4E2A\u6307\u5411\u7684\u539F\u578B\u5BF9\u8C61\u662F\u5565\u3002es6\u4E2D\u662F\u4F18\u5148\u4F7F\u7528Symbol.hasInstance\u53BB\u5224\u65AD\u67D0\u5BF9\u8C61\u662F\u5426\u662F\u6784\u9020\u5668\u7684\u5B9E\u4F8B\u3002\u4E0D\u8981\u968F\u4FBF\u4F7F\u7528__proto__\u975E\u6807\u51C6\u5C5E\u6027\u3002\u8981\u64CD\u4F5C\u539F\u578B\u8BF7\u4F7F\u7528es6\u63D0\u4F9B\u7684\u65B9\u6CD5\u3002\u4F7F\u7528Object.setPrototypeOf()\u4FEE\u6539\u7EE7\u627F\u5173\u7CFB\u9700\u8981\u8C28\u614E\u3002</li></ul><h2 id="_5\u3001\u53C2\u8003\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u53C2\u8003\u94FE\u63A5" aria-hidden="true">#</a> 5\u3001\u53C2\u8003\u94FE\u63A5</h2>`,5),A={href:"https://joshmiller.cc/symbol-hasinstance/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://262.ecma-international.org/6.0/#sec-function.prototype-@@hasinstance",target:"_blank",rel:"noopener noreferrer"},q={href:"https://segmentfault.com/a/1190000037689078",target:"_blank",rel:"noopener noreferrer"},I={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/hasInstance",target:"_blank",rel:"noopener noreferrer"};function N(E,L){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("blockquote",null,[n("p",null,[s("\u6458\u81EA\u4E8EStack Overflow "),n("a",r,[s("__proto__ VS. prototype in JavaScript"),t(a)])])]),k,n("p",null,[s("\u5BF9\u8C61\u7684"),d,s("\u5C5E\u6027\uFF0C\u6307\u5411\u4E00\u4E2A\u5185\u90E8\u65B9\u6CD5\u3002\u5F53\u5176\u4ED6\u5BF9\u8C61\u4F7F\u7528"),m,s("\u8FD0\u7B97\u7B26\uFF0C\u5224\u65AD\u662F\u5426\u4E3A\u8BE5\u5BF9\u8C61\u7684\u5B9E\u4F8B\u65F6\uFF0C\u4F1A\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u3002\u6BD4\u5982\uFF0C"),v,s("\u5728\u8BED\u8A00\u5185\u90E8\uFF0C\u5B9E\u9645\u8C03\u7528\u7684\u662F"),b,s("\uFF08instanceof\u64CD\u4F5C\u7B26\u4F18\u5148\u4F7F\u7528\u8BE5Symbol\u5BF9\u5E94\u7684\u5C5E\u6027\uFF09\u3002"),n("a",f,[s("\u53C2\u8003\u94FE\u63A5"),t(a)]),y,s(" MDN\u4E0A\u7684\u89E3\u91CA\uFF1A "),_,s("\u7528\u4E8E\u5224\u65AD\u67D0\u5BF9\u8C61\u662F\u5426\u4E3A\u67D0\u6784\u9020\u5668\u7684\u5B9E\u4F8B\u3002\u56E0\u6B64\u4F60\u53EF\u4EE5\u7528\u5B83\u81EA\u5B9A\u4E49 instanceof \u64CD\u4F5C\u7B26\u5728\u67D0\u4E2A\u7C7B\u4E0A\u7684\u884C\u4E3A\u3002"),h,s(" \u5927\u591A\u6570 class \u6CA1\u6709 "),g,s("\u3002\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u662F\u4F7F\u7528 obj instanceof Class \u68C0\u67E5 Class.prototype \u662F\u5426\u7B49\u4E8E obj \u7684\u539F\u578B\u94FE\u4E2D\u7684\u539F\u578B\u4E4B\u4E00")]),j,n("p",null,[s("\u53C2\u8003"),w,s(),n("a",O,[s("npm\u5730\u5740"),t(a)]),s(),n("a",S,[s("github\u5730\u5740"),t(a)]),x,s(" \u6E90\u7801\u91CC\u9762\u662F\u8FD9\u6837\u7684")]),P,n("ul",null,[n("li",null,[n("a",A,[s("Symbol.hasInstance"),t(a)])]),n("li",null,[n("a",F,[s("ECMA"),t(a)])]),n("li",null,[n("a",q,[s("segmentfault ECMAScript7\u89C4\u8303\u4E2D\u7684instanceof\u64CD\u4F5C\u7B26"),t(a)])]),n("li",null,[n("a",I,[s("MDN Symbol.hasInstance"),t(a)])])])])}const R=p(i,[["render",N],["__file","instanceof.html.vue"]]);export{R as default};
